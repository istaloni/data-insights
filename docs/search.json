[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Steady Learning, SteadyGrit",
    "section": "",
    "text": "Karl Marquez\nchange\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Karl Marquez",
    "section": "",
    "text": "Karl Marquez"
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "Karl Marquez",
    "section": "Education",
    "text": "Education\nUCSD"
  },
  {
    "objectID": "about.html#experience",
    "href": "about.html#experience",
    "title": "Karl Marquez",
    "section": "Experience",
    "text": "Experience\nPoseida Therapeutics"
  },
  {
    "objectID": "posts/MedicalCost.html",
    "href": "posts/MedicalCost.html",
    "title": "MedicalCostPrediction",
    "section": "",
    "text": "The goal of this notebook is to characterize the dataset and ultimately help predict medical charges based on factors like\nage, sex, bmi, number of children, smoking status, and region of living.\n  Let us start with loading the dataset for this analysis.\n\nmedicalcost &lt;- read.csv(\"medical_cost.csv\")\nmedicalcost &lt;- medicalcost %&gt;% \n  mutate(BMI.status = case_when(\n    bmi &lt; 18.5 ~ \"Underweight\",\n    bmi &gt;= 18.5 & bmi &lt; 24.9 ~ \"Normal\",\n    bmi &gt;= 25 & bmi &lt; 29.9 ~ \"Overweight\",\n    bmi &gt;= 30 ~ \"Obese\",\n    TRUE ~ \"Unknown\")) %&gt;%\n  mutate(BMI.status = factor(BMI.status, ordered = TRUE,\n                             levels = c(\"Underweight\", \"Normal\", \"Overweight\", \"Obese\", \"Unknown\"))) %&gt;% \n  mutate(children = factor(children, \n                           ordered = TRUE,\n                           levels = c(\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"))) %&gt;% \n  mutate(sex = factor(sex, ordered = TRUE, levels = c(\"male\", \"female\"))) %&gt;% \n  mutate(smoker = factor(smoker, ordered = TRUE, levels = c(\"no\", \"yes\"))) %&gt;% \n  mutate(region = factor(region, ordered = TRUE, levels = c(\"northeast\", \"northwest\", \"southeast\", \"southwest\")))\n\nI added a variable to stratify the BMI into 4 different categories: Underweight, Normal, Overweight, and Obese. I also transformed the sex, bmi status, children, smoking status, region into categorical factors."
  },
  {
    "objectID": "posts/MedicalCost.html#distribution-and-univariate-analysis",
    "href": "posts/MedicalCost.html#distribution-and-univariate-analysis",
    "title": "MedicalCostPrediction",
    "section": "Distribution and Univariate analysis",
    "text": "Distribution and Univariate analysis\n\nUnivariate Analysis1\n\nage.median &lt;- median(medicalcost$age, na.rm = TRUE)\nage.mean &lt;- mean(medicalcost$age, na.rm = TRUE)\nage.normality &lt;- shapiro.test(medicalcost$age)\nage.distribution &lt;- ggplotly(ggplot(data = medicalcost, aes(x=age)) +\n                               geom_histogram(aes(y = ..density..), fill=\"navy\", color=\"black\", bins = 10, alpha = 0.7) +\n                               geom_density(color = \"#B31312\", size = 1, linetype = 2) +\n                               geom_vline(xintercept = age.median, color=\"#054B71\", linetype=\"dashed\", linewidth=1) +\n                               annotate(geom=\"text\", x=30, y=0.03, color=\"#054B71\", size = 3,\n                                        label=paste(\"Median\\n\", round(age.median, 1))) +\n                               geom_vline(xintercept = age.mean, color=\"#0086BD\", linetype = \"dashed\", linewidth=1) +\n                               annotate(geom=\"text\", x=50, y=0.03, color=\"#0086BD\", size=3,\n                                        label=paste(\"Mean\\n\", round(age.mean, 1))) +\n                               annotate(geom = \"text\", x=30, y=0.035, size=3,\n                                        label=paste(\"Shapiro-Wilk\\nNormality Test =\", round(age.normality$p.value, 10))) +\n                               labs(x=\"Age\", y=\"Count\", title=\"Age Distribution\") +\n                               karl_theme)\n### BMI distribution\nbmi.median &lt;- median(medicalcost$bmi, na.rm = TRUE)\nbmi.mean &lt;- mean(medicalcost$bmi, na.rm = TRUE)\nbmi.normality &lt;- shapiro.test(medicalcost$bmi)\nbmi.distribution &lt;- ggplotly(ggplot(data = medicalcost, aes(x=bmi)) +\n                               geom_histogram(aes(y = ..density..), fill=\"navy\", color=\"black\", bins = 10, alpha = 0.7) +\n                               geom_density(color = \"#B31312\", size = 1, linetype = 2) +\n                               geom_vline(xintercept = bmi.median, color=\"#054B71\", linetype=\"dashed\", linewidth=1) +\n                               annotate(geom=\"text\", x=45, y=0.03, color=\"#054B71\", size = 3,\n                                        label=paste(\"Median\\n\", round(bmi.median, 1))) +\n                               geom_vline(xintercept = bmi.mean, color=\"#0086BD\", linetype = \"dashed\", linewidth=1) +\n                               annotate(geom=\"text\", x=45, y=0.04, color=\"#0086BD\", size=3,\n                                        label=paste(\"Mean\\n\", round(bmi.mean, 1))) +\n                               annotate(geom = \"text\", x=45, y=0.06, size=3,\n                                        label=paste(\"Shapiro-Wilk\\nNormality Test =\", round(bmi.normality$p.value, 10))) +\n                               labs(x=\"BMI\", y=\"Count\", title=\"BMI Distribution\") +\n                               karl_theme)\n### charges distribution\ncharges.median &lt;- median(medicalcost$charges, na.rm = TRUE)\ncharges.mean &lt;- mean(medicalcost$charges, na.rm = TRUE)\ncharges.normality &lt;- shapiro.test(medicalcost$charges)\ncharges.distribution &lt;- ggplotly(ggplot(data = medicalcost, aes(x=charges)) +\n                                   geom_histogram(aes(y = ..density..), fill=\"navy\", color=\"black\", bins = 15, alpha = 0.7) +\n                                   geom_density(color = \"#B31312\", size = 1, linetype = 2) +\n                                   geom_vline(xintercept = charges.median, color=\"#054B71\", linetype=\"dashed\", linewidth=1) +\n                                   annotate(geom=\"text\", x=30000, y=0.00002, color=\"#054B71\", size = 3,\n                                            label=paste(\"Median\\n\", round(charges.median, 1))) +\n                                   geom_vline(xintercept = charges.mean, color=\"#0086BD\", linetype = \"dashed\", linewidth=1) +\n                                   annotate(geom=\"text\", x=30000, y=0.00003, color=\"#0086BD\", size=3,\n                                            label=paste(\"Mean\\n\", round(charges.mean, 1))) +\n                                   annotate(geom = \"text\", x=30000, y=0.00004, size=3,\n                                            label=paste(\"Shapiro-Wilk\\nNormality Test =\", round(charges.normality$p.value, 10))) +\n                                   labs(x=\"Charges ($)\", y=\"Count\", title=\"Charges ($) Distribution\") +\n                                   scale_x_continuous(breaks = c(10000, 20000, 30000, 40000, 50000, 60000),\n                                                      labels = c(\"$10k\", \"$20k\", \"$30k\", \"$40k\", \"$50k\", \"$60k\")) +\n                                   karl_theme)\n\nBMIstatus &lt;- medicalcost %&gt;% \n  filter(BMI.status != \"Unknown\")\nBMIstatus &lt;- ggplotly(\n  ggplot(data = BMIstatus, aes(x=BMI.status)) +\n    geom_bar(fill = \"navy\", color = \"black\", alpha = 0.7) +\n    labs(x = \"BMI status\",\n         y = \"Count\") +\n    scale_x_discrete(breaks = c(\"Underweight\", \"Normal\", \"Overweight\", \"Obese\"),\n                     labels = c(\"Under\\nWeight\", \"Normal\", \"Under\\nWeight\", \"Obese\")) +\n    karl_theme)\n\n\n\ndistribution &lt;- subplot(\n  age.distribution, bmi.distribution, charges.distribution, BMIstatus, nrows = 2,\n  shareX = FALSE, shareY = FALSE, titleX = TRUE, titleY = TRUE, margin = 0.12\n)\ndistribution &lt;- layout(distribution, \n                     title = list(\n                       text = \"Age, BMI, and Medical Costs Distribution\",\n                       font = list(size = 25, family= \"serif\", face = \"bold\", weight = \"bold\")),\n                     margin = list(t = 100))\ndistribution\n\n\n\nBMI is the only normally distributed variable. Medical charges are skewed to the right.\n\n\n\n\nUnivariate Analysis2\n\nchildren &lt;- ggplotly(\n  ggplot(data = medicalcost, aes(x = children)) +\n    geom_bar(fill=\"navy\", alpha = 0.7, color = \"black\") +\n    labs(x=\"Number of Children\", y=\"Count\", \n         title=\" Number of Children\") +\n    karl_theme)\n\n### Sex\nsex &lt;- ggplotly(\n  ggplot(data = medicalcost, aes(x = sex)) +\n    geom_bar(fill=\"navy\", alpha = 0.7, color = \"black\") +\n    labs(x=\"Sex\", y=\"Count\", \n         title=\"Sex\") +\n    karl_theme)\n\n\n### region\n\nregion &lt;- ggplotly(\n  ggplot(data = medicalcost, aes(x = region)) +\n    geom_bar(fill=\"navy\", alpha = 0.7, color = \"black\") +\n    labs(x=\"Region\", y=\"Count\", \n         title=\"Region\") +\n    scale_x_discrete(breaks = c(\"northeast\", \"northwest\", \"southeast\", \"southwest\"),\n                       labels = c(\"North\\nEast\", \"North\\nWest\", \"South\\nEast\", \"South\\nWest\")) +\n    karl_theme)\n\n### smoking status\nsmoker &lt;- ggplotly(\n  ggplot(data = medicalcost, aes(x = smoker)) +\n    geom_bar(fill=\"navy\", alpha = 0.7, color = \"black\") +\n    labs(x=\"Smoker\", y=\"Count\", \n         title=\"Smoker\") +\n    karl_theme)\n\n\ncategories &lt;- subplot(\n  children, sex, region, smoker, nrows = 2,\n  shareX = FALSE, shareY = FALSE, titleX = TRUE, titleY = TRUE, margin = 0.1\n)\ncategories &lt;- layout(categories, \n                       title = list(\n                         text = \"Sex, Smoking Status, Number of Children, and Region\",\n                         font = list(size = 25, family= \"serif\", face = \"bold\", weight = \"bold\")))\ncategories"
  },
  {
    "objectID": "posts/MedicalCost.html#continuous-vs-categorical-variables",
    "href": "posts/MedicalCost.html#continuous-vs-categorical-variables",
    "title": "MedicalCostPrediction",
    "section": "Continuous vs Categorical Variables",
    "text": "Continuous vs Categorical Variables\n\nAge distribution\n\nage.sex.comparison &lt;- list(c(\"male\", \"female\")) \nage.sex.plot &lt;- ggplotly(ggplot(data = medicalcost, aes(x = reorder(sex, -age, FUN = median), y=age)) +\n                           geom_violin(aes(fill = sex), alpha = 0.5, color = \"black\") +\n                           geom_boxplot(aes(fill = sex), alpha = 0.75, color = \"black\") +\n                           geom_sina(aes(fill = sex), alpha = 0.5, size = 3, color = \"white\") +\n                           labs(x=\"Sex\", y=\"Age\", title = \"Age Distribution by Sex\") +\n                           scale_fill_manual(values = c(\"#1D24CA\", \"#B31312\")) +\n                           scale_color_manual(values = c(\"#1D24CA\", \"#B31312\")) +\n                           #stat_summary(fun.data = mean_cl_boot, geom = \"point\", color = \"black\", size = 3) +\n                           stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color = \"black\", size = 1, width = 0.1) +\n                           stat_compare_means(comparisons = age.sex.comparison, method = \"t.test\") +\n                           stat_compare_means(method = \"t.test\", label.y = 65, label.x = 1.5) +\n                           karl_theme +\n                           theme(legend.position = \"none\"))\n\n\nage.smoker.comparison &lt;- list(c(\"no\", \"yes\"))\nage.smoker.plot &lt;- ggplotly(ggplot(data = medicalcost, aes(x = reorder(smoker, -age, FUN = median), y=age)) +\n                              geom_violin(aes(fill = smoker), alpha = 0.5, color = \"black\") +\n                              geom_boxplot(aes(fill = smoker), alpha = 0.75, color = \"black\") +\n                              geom_sina(aes(fill = smoker), alpha = 0.5, size = 3, color = \"white\") +\n                              labs(x=\"Smoker\", y=\"Age\", title = \"Age Distribution by Smoking Status\") +\n                              scale_fill_manual(values = c(\"#1D24CA\", \"#B31312\")) +\n                              scale_color_manual(values = c(\"#1D24CA\", \"#B31312\")) +\n                              stat_summary(fun.data = mean_cl_boot, geom = \"point\", color = \"black\", size = 3) +\n                              stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color = \"black\", size = 1, width = 0.1) +\n                              #stat_compare_means(comparisons = age.smoker.comparison, method = \"t.test\") +\n                              stat_compare_means(method = \"t.test\", label.y = 62.5, label.x = 1.5) +\n                              karl_theme +\n                              theme(legend.position = \"none\"))\n\nage.region.comparison &lt;- list(c(\"northeast\", \"northwest\"), c(\"northeast\", \"southeast\"), c(\"northeast\", \"southwest\"),\n                              c(\"northwest\", \"southeast\"), c(\"northwest\", \"southwest\"),\n                              c(\"southeast\", \"southwest\"))\nage.region.plot &lt;- ggplotly(ggplot(data = medicalcost, aes(x = reorder(region, -age, FUN = median), y=age)) +\n                              geom_violin(aes(fill = region), alpha = 0.5, color = \"black\") +\n                              geom_boxplot(aes(fill = region), alpha = 0.75, color = \"black\") +\n                              geom_sina(aes(fill = region), alpha = 0.5, size = 3, color = \"white\") +\n                              labs(x=\"Region\", y=\"Age\", title = \"Age Distribution by Region\") +\n                              scale_fill_manual(values = c(\"#1D24CA\", \"#B31312\", \"#F7C04A\", \"#539165\")) +\n                              scale_color_manual(values = c(\"#1D24CA\", \"#B31312\", \"#F7C04A\", \"#539165\")) +\n                              stat_summary(fun.data = mean_cl_boot, geom = \"point\", color = \"black\", size = 3) +\n                              stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color = \"black\", size = 1, width = 0.1) +\n                              #stat_compare_means(comparisons = age.region.comparison, method = \"t.test\") +\n                              stat_compare_means(method = \"anova\", label.y = 60, label.x = 2) +\n                              karl_theme +\n                              theme(legend.position = \"none\"))\n\n\nage.children.comparison &lt;- list(c(\"0\", \"1\"), c(\"0\", \"2\"), c(\"0\", \"3\"), c(\"0\", \"4\"), c(\"0\", \"5\"),\n                                c(\"1\", \"2\"), c(\"1\", \"3\"), c(\"1\", \"4\"), c(\"1\", \"5\"),\n                                c(\"2\", \"3\"), c(\"2\", \"4\"), c(\"2\", \"5\"),\n                                c(\"3\", \"4\"), c(\"3\", \"5\"), c(\"4\", \"5\"))\nage.children.plot &lt;- ggplotly(ggplot(data = medicalcost, aes(x = reorder(children, -age, FUN = median), y=age)) +\n                                geom_violin(aes(fill = children), alpha = 0.5, color = \"black\") +\n                                geom_boxplot(aes(fill = children), alpha = 0.75, color = \"black\") +\n                                geom_sina(aes(fill = children), alpha = 0.5, size = 3, color = \"white\") +\n                                labs(x=\"Children\", y=\"Age\", title = \"Age Distribution by Number of Children\") +\n                                scale_fill_manual(values = c(\"#1D24CA\", \"#005EF9\", \"#0083FF\", \"#00A0F6\", \"#00B9D0\", \"#00D0A2\")) +\n                                scale_color_manual(values = c(\"#1D24CA\", \"#005EF9\", \"#0083FF\", \"#00A0F6\", \"#00B9D0\", \"#00D0A2\")) +\n                                stat_summary(fun.data = mean_cl_boot, geom = \"point\", color = \"black\", size = 3) +\n                                stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color = \"black\", size = 1, width = 0.1) +\n                                #stat_compare_means(comparisons = age.children.comparison, method = \"t.test\") +\n                                stat_compare_means(method = \"anova\", label.y = 65, label.x = 2) +\n                                karl_theme +\n                                theme(legend.position = \"none\"))\n\nage.categories &lt;- subplot(\n  age.sex.plot, age.smoker.plot, age.region.plot, age.children.plot, nrows = 2,\n  shareX = FALSE, shareY = FALSE, titleX = TRUE, titleY = TRUE, margin = 0.1\n)\nage.categories &lt;- layout(age.categories, \n                     title = list(\n                       text = \"Age Distribution among Categories\",\n                       font = list(size = 25, family= \"serif\", face = \"bold\", weight = \"bold\")))\nage.categories\n\n\n\n\n\n\n\nBMI distribution\n\nbmi.sex.comparison &lt;- list(c(\"male\", \"female\")) \nbmi.sex.plot &lt;- ggplotly(ggplot(data = medicalcost, aes(x = reorder(sex, -bmi, FUN = median), y=bmi)) +\n                           geom_violin(aes(fill = sex), alpha = 0.5, color = \"black\") +\n                           geom_boxplot(aes(fill = sex), alpha = 0.75, color = \"black\") +\n                           geom_sina(aes(fill = sex), alpha = 0.5, size = 3, color = \"white\") +\n                           labs(x=\"Sex\", y=\"BMI\", title = \"BMI Distribution by Sex\") +\n                           scale_fill_manual(values = c(\"#1D24CA\", \"#B31312\")) +\n                           scale_color_manual(values = c(\"#1D24CA\", \"#B31312\")) +\n                           stat_summary(fun.data = mean_cl_boot, geom = \"point\", color = \"black\", size = 3) +\n                           stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color = \"black\", size = 1, width = 0.1) +\n                           #stat_compare_means(comparisons = age.sex.comparison, method = \"t.test\") +\n                           stat_compare_means(method = \"t.test\", label.y = 50, label.x = 1.5) +\n                           karl_theme +\n                           theme(legend.position = \"none\"))\n\nbmi.smoker.comparison &lt;- list(c(\"no\", \"yes\"))\nbmi.smoker.plot &lt;- ggplotly(ggplot(data = medicalcost, aes(x = reorder(smoker, -bmi, FUN = median), y=bmi)) +\n                              geom_violin(aes(fill = smoker), alpha = 0.5, color = \"black\") +\n                              geom_boxplot(aes(fill = smoker), alpha = 0.75, color = \"black\") +\n                              geom_sina(aes(fill = smoker), alpha = 0.5, size = 3, color = \"white\") +\n                              labs(x=\"Smoker\", y=\"BMI\", title = \"BMI Distribution by Smoking Status\") +\n                              scale_fill_manual(values = c(\"#1D24CA\", \"#B31312\")) +\n                              scale_color_manual(values = c(\"#1D24CA\", \"#B31312\")) +\n                              stat_summary(fun.data = mean_cl_boot, geom = \"point\", color = \"black\", size = 3) +\n                              stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color = \"black\", size = 1, width = 0.1) +\n                              #stat_compare_means(comparisons = age.smoker.comparison, method = \"t.test\") +\n                              stat_compare_means(method = \"t.test\", label.y = 50, label.x = 1.5) +\n                              karl_theme +\n                              theme(legend.position = \"none\"))\n\nbmi.region.comparison &lt;- list(c(\"northeast\", \"northwest\"), c(\"northeast\", \"southeast\"), c(\"northeast\", \"southwest\"),\n                              c(\"northwest\", \"southeast\"), c(\"northwest\", \"southwest\"),\n                              c(\"southeast\", \"southwest\"))\nbmi.region.plot &lt;- ggplotly(ggplot(data = medicalcost, aes(x = reorder(region, -bmi, FUN = median), y=bmi)) +\n                              geom_violin(aes(fill = region), alpha = 0.5, color = \"black\") +\n                              geom_boxplot(aes(fill = region), alpha = 0.75, color = \"black\") +\n                              geom_sina(aes(fill = region), alpha = 0.5, size = 3, color = \"white\") +\n                              labs(x=\"Region\", y=\"BMI\", title = \"BMI Distribution by Region\") +\n                              scale_fill_manual(values = c(\"#1D24CA\", \"#B31312\", \"#F7C04A\", \"#539165\")) +\n                              scale_color_manual(values = c(\"#1D24CA\", \"#B31312\", \"#F7C04A\", \"#539165\")) +\n                              stat_summary(fun.data = mean_cl_boot, geom = \"point\", color = \"black\", size = 3) +\n                              stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color = \"black\", size = 1, width = 0.1) +\n                              #stat_compare_means(comparisons = age.region.comparison, method = \"t.test\") +\n                              stat_compare_means(method = \"anova\", label.y = 50, label.x = 2) +\n                              karl_theme +\n                              theme(legend.position = \"none\"))\n\nbmi.children.comparison &lt;- list(c(\"0\", \"1\"), c(\"0\", \"2\"), c(\"0\", \"3\"), c(\"0\", \"4\"), c(\"0\", \"5\"),\n                                c(\"1\", \"2\"), c(\"1\", \"3\"), c(\"1\", \"4\"), c(\"1\", \"5\"),\n                                c(\"2\", \"3\"), c(\"2\", \"4\"), c(\"2\", \"5\"),\n                                c(\"3\", \"4\"), c(\"3\", \"5\"), c(\"4\", \"5\"))\nbmi.children.plot &lt;- ggplotly(ggplot(data = medicalcost, aes(x = reorder(children, -bmi, FUN = median), y=bmi)) +\n                                geom_violin(aes(fill = children), alpha = 0.5, color = \"black\") +\n                                geom_boxplot(aes(fill = children), alpha = 0.75, color = \"black\") +\n                                geom_sina(aes(fill = children), alpha = 0.5, size = 3, color = \"white\") +\n                                labs(x=\"Children\", y=\"BMI\", title = \"BMI Distribution by Number of Children\") +\n                                scale_fill_manual(values = c(\"#1D24CA\", \"#005EF9\", \"#0083FF\", \"#00A0F6\", \"#00B9D0\", \"#00D0A2\")) +\n                                scale_color_manual(values = c(\"#1D24CA\", \"#005EF9\", \"#0083FF\", \"#00A0F6\", \"#00B9D0\", \"#00D0A2\")) +\n                                stat_summary(fun.data = mean_cl_boot, geom = \"point\", color = \"black\", size = 3) +\n                                stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color = \"black\", size = 1, width = 0.1) +\n                                #stat_compare_means(comparisons = age.children.comparison, method = \"t.test\") +\n                                stat_compare_means(method = \"anova\", label.y = 50, label.x = 3) +\n                                karl_theme +\n                                theme(legend.position = \"none\"))\n\nbmi.categories &lt;- subplot(\n  bmi.sex.plot, bmi.smoker.plot, bmi.region.plot, bmi.children.plot, nrows = 2,\n  shareX = FALSE, shareY = FALSE, titleX = TRUE, titleY = TRUE, margin = 0.1\n)\nbmi.categories &lt;- layout(bmi.categories,\n                         title = list(\n                           text = \"BMI Distribution among Categories\",\n                           font = list(size = 25, family= \"serif\", face = \"bold\", weight = \"bold\")))\nbmi.categories\n\n\n\n\n\n\n\nMedical Cost distribution\n\ncharges.sex.comparison &lt;- list(c(\"male\", \"female\")) \ncharges.sex.plot &lt;- ggplotly(ggplot(data = medicalcost, aes(x = reorder(sex, -charges, FUN = median), y=charges)) +\n                           geom_violin(aes(fill = sex), alpha = 0.5, color = \"black\") +\n                           geom_boxplot(aes(fill = sex), alpha = 0.75, color = \"black\") +\n                           geom_sina(aes(fill = sex), alpha = 0.5, size = 3, color = \"white\") +\n                           labs(x=\"Sex\", y=\"Charges ($)\", title = \"Charges Distribution by Sex\") +\n                           scale_fill_manual(values = c(\"#1D24CA\", \"#B31312\")) +\n                           scale_color_manual(values = c(\"#1D24CA\", \"#B31312\")) +\n                           stat_summary(fun.data = mean_cl_boot, geom = \"point\", color = \"black\", size = 3) +\n                           stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color = \"black\", size = 1, width = 0.1) +\n                           #stat_compare_means(comparisons = age.sex.comparison, method = \"t.test\") +\n                           stat_compare_means(method = \"t.test\", label.y = 60000, label.x = 1.5) +\n                           karl_theme +\n                           theme(legend.position = \"none\") +\n                             scale_y_continuous(breaks = c(20000, 40000, 60000),\n                                                labels = c(\"$20k\", \"$40k\", \"$60k\")))\n\ncharges.smoker.comparison &lt;- list(c(\"no\", \"yes\"))\ncharges.smoker.plot &lt;- ggplotly(ggplot(data = medicalcost, aes(x = reorder(smoker, -charges, FUN = median), y=charges)) +\n                              geom_violin(aes(fill = smoker), alpha = 0.5, color = \"black\") +\n                              geom_boxplot(aes(fill = smoker), alpha = 0.75, color = \"black\") +\n                              geom_sina(aes(fill = smoker), alpha = 0.5, size = 3, color = \"white\") +\n                              labs(x=\"Smoker\", y=\"Charges ($)\", title = \"Charges Distribution by Smoking Status\") +\n                              scale_fill_manual(values = c(\"#1D24CA\", \"#B31312\")) +\n                              scale_color_manual(values = c(\"#1D24CA\", \"#B31312\")) +\n                              stat_summary(fun.data = mean_cl_boot, geom = \"point\", color = \"black\", size = 3) +\n                              stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color = \"black\", size = 1, width = 0.1) +\n                              #stat_compare_means(comparisons = age.smoker.comparison, method = \"t.test\") +\n                              stat_compare_means(method = \"t.test\", label.y = 60000, label.x = 1.5) +\n                              karl_theme +\n                              theme(legend.position = \"none\") +\n                                scale_y_continuous(breaks = c(20000, 40000, 60000),\n                                                   labels = c(\"$20k\", \"$40k\", \"$60k\")))\n\ncharges.region.comparison &lt;- list(c(\"northeast\", \"northwest\"), c(\"northeast\", \"southeast\"), c(\"northeast\", \"southwest\"),\n                              c(\"northwest\", \"southeast\"), c(\"northwest\", \"southwest\"),\n                              c(\"southeast\", \"southwest\"))\ncharges.region.plot &lt;- ggplotly(ggplot(data = medicalcost, aes(x = reorder(region, -charges, FUN = median), y=charges)) +\n                              geom_violin(aes(fill = region), alpha = 0.5, color = \"black\") +\n                              geom_boxplot(aes(fill = region), alpha = 0.75, color = \"black\") +\n                              geom_sina(aes(fill = region), alpha = 0.5, size = 3, color = \"white\") +\n                              labs(x=\"Region\", y=\"Charges ($)\", title = \"Charges Distribution by Region\") +\n                              scale_fill_manual(values = c(\"#1D24CA\", \"#B31312\", \"#F7C04A\", \"#539165\")) +\n                              scale_color_manual(values = c(\"#1D24CA\", \"#B31312\", \"#F7C04A\", \"#539165\")) +\n                              stat_summary(fun.data = mean_cl_boot, geom = \"point\", color = \"black\", size = 3) +\n                              stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color = \"black\", size = 1, width = 0.1) +\n                              #stat_compare_means(comparisons = age.region.comparison, method = \"t.test\") +\n                              stat_compare_means(method = \"anova\", label.y = 60000, label.x = 2.5) +\n                              karl_theme +\n                              theme(legend.position = \"none\") +\n                                scale_y_continuous(breaks = c(20000, 40000, 60000),\n                                                   labels = c(\"$20k\", \"$40k\", \"$60k\")))\n\ncharges.children.comparison &lt;- list(c(\"0\", \"1\"), c(\"0\", \"2\"), c(\"0\", \"3\"), c(\"0\", \"4\"), c(\"0\", \"5\"),\n                                c(\"1\", \"2\"), c(\"1\", \"3\"), c(\"1\", \"4\"), c(\"1\", \"5\"),\n                                c(\"2\", \"3\"), c(\"2\", \"4\"), c(\"2\", \"5\"),\n                                c(\"3\", \"4\"), c(\"3\", \"5\"), c(\"4\", \"5\"))\ncharges.children.plot &lt;- ggplotly(ggplot(data = medicalcost, aes(x = reorder(children, -charges, FUN = median), y=charges)) +\n                                geom_violin(aes(fill = children), alpha = 0.5, color = \"black\") +\n                                geom_boxplot(aes(fill = children), alpha = 0.75, color = \"black\") +\n                                geom_sina(aes(fill = children), alpha = 0.5, size = 3, color = \"white\") +\n                                labs(x=\"Children\", y=\"Charges ($)\", title = \"Charges Distribution by Number of Children\") +\n                                scale_fill_manual(values = c(\"#1D24CA\", \"#005EF9\", \"#0083FF\", \"#00A0F6\", \"#00B9D0\", \"#00D0A2\")) +\n                                scale_color_manual(values = c(\"#1D24CA\", \"#005EF9\", \"#0083FF\", \"#00A0F6\", \"#00B9D0\", \"#00D0A2\")) +\n                                stat_summary(fun.data = mean_cl_boot, geom = \"point\", color = \"black\", size = 3) +\n                                stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color = \"black\", size = 1, width = 0.1) +\n                                #stat_compare_means(comparisons = age.children.comparison, method = \"t.test\") +\n                                stat_compare_means(method = \"anova\", label.y = 60000, label.x = 2.5) +\n                                karl_theme +\n                                theme(legend.position = \"none\") +\n                                  scale_y_continuous(breaks = c(20000, 40000, 60000),\n                                                     labels = c(\"$20k\", \"$40k\", \"$60k\")))\ncharges.categories &lt;- subplot(\n  charges.sex.plot, charges.smoker.plot, charges.region.plot, charges.children.plot, nrows = 2,\n  shareX = FALSE, shareY = FALSE, titleX = TRUE, titleY = TRUE, margin = 0.1\n)\ncharges.categories &lt;- layout(charges.categories,\n                         title = list(\n                           text = \"Charges ($) Distribution among Categories\",\n                           font = list(size = 25, family= \"serif\", face = \"bold\", weight = \"bold\")))\ncharges.categories\n\n\n\n\n\n\n\nAge and Medical Charge\n\nage.BMIstatus.comparison &lt;- list(c(\"Underweight\", \"Normal\"),\n                                 c(\"Underweight\", \"Overweight\"),\n                                 c(\"Underweight\", \"Obese\"),\n                                 c(\"Normal\", \"Overweight\"),\n                                 c(\"Normal\", \"Obese\"),\n                                 c(\"Overweight\", \"Obese\"))\nage.bmi.status &lt;- age.BMIstatus.plot &lt;- ggplotly(ggplot(data = BMIstatus, aes(x = reorder(BMI.status, -age, FUN = median), y=age)) +\n                                 geom_violin(aes(fill = BMI.status), alpha = 0.5, color = \"black\") +\n                                 geom_boxplot(aes(fill = BMI.status), alpha = 0.75, color = \"black\") +\n                                 geom_sina(aes(fill = BMI.status), alpha = 0.5, size = 3, color = \"white\") +\n                                 labs(x=\"BMI status\", y=\"Age\", title = \"Age Distribution by BMI status\") +\n                                 scale_fill_manual(values = c(\"#1D24CA\", \"#539165\", \"#F7C04A\",\"#B31312\")) +\n                                 scale_color_manual(values = c(\"#1D24CA\", \"#539165\", \"#F7C04A\",\"#B31312\")) +\n                                 stat_summary(fun.data = mean_cl_boot, geom = \"point\", color = \"black\", size = 3) +\n                                 stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color = \"black\", size = 1, width = 0.1) +\n                                 #stat_compare_means(comparisons = age.BMIstatus.comparison) +\n                                 stat_compare_means(method = \"anova\", label.y = 62, label.x = 2) +\n                                 karl_theme +\n                                 theme(legend.position = \"none\"))\n\ncharge.bmistatus &lt;- charges.BMIstatus.plot &lt;- ggplotly(ggplot(data = BMIstatus, aes(x = reorder(BMI.status, -charges, FUN = median), y=charges)) +\n                                 geom_violin(aes(fill = BMI.status), alpha = 0.5, color = \"black\") +\n                                 geom_boxplot(aes(fill = BMI.status), alpha = 0.75, color = \"black\") +\n                                 geom_sina(aes(fill = BMI.status), alpha = 0.5, size = 3, color = \"white\") +\n                                 labs(x=\"BMI status\", y=\"Charges ($)\", title = \"Charge Distribution by BMI status\") +\n                                 scale_fill_manual(values = c(\"#1D24CA\", \"#539165\", \"#F7C04A\",\"#B31312\")) +\n                                 scale_color_manual(values = c(\"#1D24CA\", \"#539165\", \"#F7C04A\",\"#B31312\")) +\n                                 stat_summary(fun.data = mean_cl_boot, geom = \"point\", color = \"black\", size = 3) +\n                                 stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color = \"black\", size = 1, width = 0.1) +\n                                 #stat_compare_means(comparisons = age.BMIstatus.comparison) +\n                                 stat_compare_means(method = \"anova\", label.y = 60000, label.x = 1.5) +\n                                 karl_theme +\n                                 theme(legend.position = \"none\") +\n                                   scale_y_continuous(breaks = c(20000, 40000, 60000),\n                                                      labels = c(\"$20k\", \"$40k\", \"$60k\")))\nBMIstatus &lt;- subplot(\n  age.bmi.status, charge.bmistatus, nrows = 1,\n  shareX = FALSE, shareY = FALSE, titleX = TRUE, titleY = TRUE, margin = 0.075\n)\nBMIstatus &lt;- layout(BMIstatus,\n                         title = list(\n                           text = \"Age and Medical Charges among different BMI classification\",\n                           font = list(size = 25, family= \"serif\", face = \"bold\", weight = \"bold\")))\nBMIstatus"
  },
  {
    "objectID": "posts/MedicalCost.html#continuous-vs-continuous-variables",
    "href": "posts/MedicalCost.html#continuous-vs-continuous-variables",
    "title": "MedicalCostPrediction",
    "section": "Continuous vs Continuous Variables",
    "text": "Continuous vs Continuous Variables\n\nMedical Cost vs Age by smoking status\n\nage.vs.charge.by.smoker &lt;- ggplotly(ggplot(data = medicalcost, aes(x = age, y = charges)) +\n                                      geom_point(alpha = 0.7, size = 5, color = \"white\", aes(fill = smoker)) +\n                                      labs(title = \"Smoker among the highest charged medically\",\n                                           x = \"Age\", y = \"Medical Cost\") +\n                                      scale_fill_manual(values = c(\"no\" = \"#1D24CA\",\"yes\" = \"#B31312\")) +\n                                      scale_y_continuous(breaks = c(20000, 40000, 60000),\n                                                         labels = c(\"$20k\", \"$40k\", \"$60k\")) +\n                                      karl_theme +\n                                      theme(legend.position.inside = c(0, 0)))\nage.vs.charge.by.smoker\n\n\n\n\n\n\n\nMedical Cost vs Age by BMI status\n\nBMIstatus &lt;- medicalcost %&gt;% \n  filter(BMI.status != \"Unknown\")\nggplotly(ggplot(data = BMIstatus, aes(x = age, y = charges)) +\n           geom_point(alpha = 0.75, size = 3, color = \"white\", aes(fill = BMI.status)) +\n           labs(title = \"Obese among the highest charged medically\") +\n           scale_fill_manual(values = c(\"Underweight\" = \"#1D24CA\", \n                                         \"Normal\" = \"#539165\", \n                                         \"Overweight\" = \"#F7C04A\",\n                                         \"Obese\" = \"#B31312\")) +\n           scale_y_continuous(breaks = c(20000, 40000, 60000),\n                                    labels = c(\"$20k\", \"$40k\", \"$60k\")) +\n           facet_wrap(~ BMI.status) +\n           karl_theme)\n\n\n\n\n\n\n\nMedical Cost vs BMI by smoking status\n\nbmi.vs.charge.by.smoker &lt;- ggplotly(ggplot(data = medicalcost, aes(x = bmi, y = charges)) +\n                            geom_point(alpha = 0.75, size = 5, color = \"white\", aes(fill = smoker)) +\n                            labs(title = \"Smoker among the highest medically charged\",\n                                 x = \"BMI\", y = \"Charges ($)\") +\n                            scale_fill_manual(values = c(\"no\" = \"#1D24CA\",\"yes\" = \"#B31312\")) +\n                            scale_y_continuous(breaks = c(20000, 40000, 60000),\n                                               labels = c(\"$20k\", \"$40k\", \"$60k\")) +\n                            karl_theme)\nbmi.vs.charge.by.smoker"
  },
  {
    "objectID": "posts/MedicalCost.html#d-plots",
    "href": "posts/MedicalCost.html#d-plots",
    "title": "MedicalCostPrediction",
    "section": "3D Plots",
    "text": "3D Plots\n\nBMIstatus.naremoved &lt;- medicalcost %&gt;% \n  filter(BMI.status != \"Unknown\") %&gt;% \n  mutate(BMI.status = factor(BMI.status,\n                                levels = c(\"Underweight\", \"Normal\",\n                                           \"Overweight\", \"Obese\")))\n\nage.bmi.charge2 &lt;- plot_ly(\n  data = BMIstatus.naremoved, type = \"scatter3d\", mode = \"markers\",\n  x = ~age, y = ~bmi, z = ~charges, \n  color = ~smoker, colors = c(\"no\" = \"#1D24CA\", \"yes\" = \"#B31312\"),\n  symbol = ~BMI.status, symbols = c(\"Underweight\" = \"circle\",\n                                    \"Normal\" = \"square\",\n                                    \"Overweight\" = \"diamond\",\n                                    \"Obese\" = \"cross\"),\n  marker = list(opacity = 0.5), width = 900, height = 800) %&gt;% \n  layout(\n    title = list(\n      text = \"3D ScatterPlot of Age, BMI, and Charges\", \n      font = list(size = 20)),\n    scene = list(\n      xaxis = list(title = \"Age\", titlefont = list(size = 10)),\n      yaxis = list(title = \"BMI\", titlefont = list(size = 10)),\n      zaxis = list(title = \"Charges ($)\", titlefont = list(size = 10))),\n    legend = list(title = list(text = \"Smoker Status\", font = list(size = 10))),\n    margin = list(l = 10, r = 10, b = 10, t = 40), \n    autosize = TRUE)\nage.bmi.charge2\n\n\n\nDouble-positive for Smoker and Obese among the highest medically charged."
  },
  {
    "objectID": "blogs.html",
    "href": "blogs.html",
    "title": "Blogs",
    "section": "",
    "text": "MedicalCostPrediction\n\n\n\n\n\n\n\n\nKarl Marquez\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "Blog/Medical-Cost/MedicalCost.html",
    "href": "Blog/Medical-Cost/MedicalCost.html",
    "title": "MedicalCostPrediction",
    "section": "",
    "text": "The goal of this notebook is to characterize the dataset and ultimately help predict medical charges based on factors like\nage, sex, bmi, number of children, smoking status, and region of living.\n  Let us start with loading the dataset for this analysis.\n\nmedicalcost &lt;- read.csv(\"medical_cost.csv\")\nmedicalcost &lt;- medicalcost %&gt;% \n  mutate(BMI.status = case_when(\n    bmi &lt; 18.5 ~ \"Underweight\",\n    bmi &gt;= 18.5 & bmi &lt; 24.9 ~ \"Normal\",\n    bmi &gt;= 25 & bmi &lt; 29.9 ~ \"Overweight\",\n    bmi &gt;= 30 ~ \"Obese\",\n    TRUE ~ \"Unknown\")) %&gt;%\n  mutate(BMI.status = factor(BMI.status, ordered = TRUE,\n                             levels = c(\"Underweight\", \"Normal\", \"Overweight\", \"Obese\", \"Unknown\"))) %&gt;% \n  mutate(children = factor(children, \n                           ordered = TRUE,\n                           levels = c(\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"))) %&gt;% \n  mutate(sex = factor(sex, ordered = TRUE, levels = c(\"male\", \"female\"))) %&gt;% \n  mutate(smoker = factor(smoker, ordered = TRUE, levels = c(\"no\", \"yes\"))) %&gt;% \n  mutate(region = factor(region, ordered = TRUE, levels = c(\"northeast\", \"northwest\", \"southeast\", \"southwest\")))\n\nI added a variable to stratify the BMI into 4 different categories: Underweight, Normal, Overweight, and Obese. I also transformed the sex, bmi status, children, smoking status, region into categorical factors."
  },
  {
    "objectID": "Blog/Medical-Cost/MedicalCost.html#distribution-and-univariate-analysis",
    "href": "Blog/Medical-Cost/MedicalCost.html#distribution-and-univariate-analysis",
    "title": "MedicalCostPrediction",
    "section": "Distribution and Univariate analysis",
    "text": "Distribution and Univariate analysis\n\nUnivariate Analysis1\n\nage.median &lt;- median(medicalcost$age, na.rm = TRUE)\nage.mean &lt;- mean(medicalcost$age, na.rm = TRUE)\nage.normality &lt;- shapiro.test(medicalcost$age)\nage.distribution &lt;- ggplotly(ggplot(data = medicalcost, aes(x=age)) +\n                               geom_histogram(aes(y = ..density..), fill=\"navy\", color=\"black\", bins = 10, alpha = 0.7) +\n                               geom_density(color = \"#B31312\", size = 1, linetype = 2) +\n                               geom_vline(xintercept = age.median, color=\"#054B71\", linetype=\"dashed\", linewidth=1) +\n                               annotate(geom=\"text\", x=30, y=0.03, color=\"#054B71\", size = 3,\n                                        label=paste(\"Median\\n\", round(age.median, 1))) +\n                               geom_vline(xintercept = age.mean, color=\"#0086BD\", linetype = \"dashed\", linewidth=1) +\n                               annotate(geom=\"text\", x=50, y=0.03, color=\"#0086BD\", size=3,\n                                        label=paste(\"Mean\\n\", round(age.mean, 1))) +\n                               annotate(geom = \"text\", x=30, y=0.035, size=3,\n                                        label=paste(\"Shapiro-Wilk\\nNormality Test =\", round(age.normality$p.value, 10))) +\n                               labs(x=\"Age\", y=\"Count\", title=\"Age Distribution\") +\n                               karl_theme)\n### BMI distribution\nbmi.median &lt;- median(medicalcost$bmi, na.rm = TRUE)\nbmi.mean &lt;- mean(medicalcost$bmi, na.rm = TRUE)\nbmi.normality &lt;- shapiro.test(medicalcost$bmi)\nbmi.distribution &lt;- ggplotly(ggplot(data = medicalcost, aes(x=bmi)) +\n                               geom_histogram(aes(y = ..density..), fill=\"navy\", color=\"black\", bins = 10, alpha = 0.7) +\n                               geom_density(color = \"#B31312\", size = 1, linetype = 2) +\n                               geom_vline(xintercept = bmi.median, color=\"#054B71\", linetype=\"dashed\", linewidth=1) +\n                               annotate(geom=\"text\", x=45, y=0.03, color=\"#054B71\", size = 3,\n                                        label=paste(\"Median\\n\", round(bmi.median, 1))) +\n                               geom_vline(xintercept = bmi.mean, color=\"#0086BD\", linetype = \"dashed\", linewidth=1) +\n                               annotate(geom=\"text\", x=45, y=0.04, color=\"#0086BD\", size=3,\n                                        label=paste(\"Mean\\n\", round(bmi.mean, 1))) +\n                               annotate(geom = \"text\", x=45, y=0.06, size=3,\n                                        label=paste(\"Shapiro-Wilk\\nNormality Test =\", round(bmi.normality$p.value, 10))) +\n                               labs(x=\"BMI\", y=\"Count\", title=\"BMI Distribution\") +\n                               karl_theme)\n### charges distribution\ncharges.median &lt;- median(medicalcost$charges, na.rm = TRUE)\ncharges.mean &lt;- mean(medicalcost$charges, na.rm = TRUE)\ncharges.normality &lt;- shapiro.test(medicalcost$charges)\ncharges.distribution &lt;- ggplotly(ggplot(data = medicalcost, aes(x=charges)) +\n                                   geom_histogram(aes(y = ..density..), fill=\"navy\", color=\"black\", bins = 15, alpha = 0.7) +\n                                   geom_density(color = \"#B31312\", size = 1, linetype = 2) +\n                                   geom_vline(xintercept = charges.median, color=\"#054B71\", linetype=\"dashed\", linewidth=1) +\n                                   annotate(geom=\"text\", x=30000, y=0.00002, color=\"#054B71\", size = 3,\n                                            label=paste(\"Median\\n\", round(charges.median, 1))) +\n                                   geom_vline(xintercept = charges.mean, color=\"#0086BD\", linetype = \"dashed\", linewidth=1) +\n                                   annotate(geom=\"text\", x=30000, y=0.00003, color=\"#0086BD\", size=3,\n                                            label=paste(\"Mean\\n\", round(charges.mean, 1))) +\n                                   annotate(geom = \"text\", x=30000, y=0.00004, size=3,\n                                            label=paste(\"Shapiro-Wilk\\nNormality Test =\", round(charges.normality$p.value, 10))) +\n                                   labs(x=\"Charges ($)\", y=\"Count\", title=\"Charges ($) Distribution\") +\n                                   scale_x_continuous(breaks = c(10000, 20000, 30000, 40000, 50000, 60000),\n                                                      labels = c(\"$10k\", \"$20k\", \"$30k\", \"$40k\", \"$50k\", \"$60k\")) +\n                                   karl_theme)\n\nBMIstatus &lt;- medicalcost %&gt;% \n  filter(BMI.status != \"Unknown\")\nBMIstatus &lt;- ggplotly(\n  ggplot(data = BMIstatus, aes(x=BMI.status)) +\n    geom_bar(fill = \"navy\", color = \"black\", alpha = 0.7) +\n    labs(x = \"BMI status\",\n         y = \"Count\") +\n    scale_x_discrete(breaks = c(\"Underweight\", \"Normal\", \"Overweight\", \"Obese\"),\n                     labels = c(\"Under\\nWeight\", \"Normal\", \"Under\\nWeight\", \"Obese\")) +\n    karl_theme)\n\n\n\ndistribution &lt;- subplot(\n  age.distribution, bmi.distribution, charges.distribution, BMIstatus, nrows = 2,\n  shareX = FALSE, shareY = FALSE, titleX = TRUE, titleY = TRUE, margin = 0.12\n)\ndistribution &lt;- layout(distribution, \n                     title = list(\n                       text = \"Age, BMI, and Medical Costs Distribution\",\n                       font = list(size = 25, family= \"serif\", face = \"bold\", weight = \"bold\")),\n                     margin = list(t = 100))\ndistribution\n\n\n\nBMI is the only normally distributed variable. Medical charges are skewed to the right.\n\n\n\n\nUnivariate Analysis2\n\nchildren &lt;- ggplotly(\n  ggplot(data = medicalcost, aes(x = children)) +\n    geom_bar(fill=\"navy\", alpha = 0.7, color = \"black\") +\n    labs(x=\"Number of Children\", y=\"Count\", \n         title=\" Number of Children\") +\n    karl_theme)\n\n### Sex\nsex &lt;- ggplotly(\n  ggplot(data = medicalcost, aes(x = sex)) +\n    geom_bar(fill=\"navy\", alpha = 0.7, color = \"black\") +\n    labs(x=\"Sex\", y=\"Count\", \n         title=\"Sex\") +\n    karl_theme)\n\n\n### region\n\nregion &lt;- ggplotly(\n  ggplot(data = medicalcost, aes(x = region)) +\n    geom_bar(fill=\"navy\", alpha = 0.7, color = \"black\") +\n    labs(x=\"Region\", y=\"Count\", \n         title=\"Region\") +\n    scale_x_discrete(breaks = c(\"northeast\", \"northwest\", \"southeast\", \"southwest\"),\n                       labels = c(\"North\\nEast\", \"North\\nWest\", \"South\\nEast\", \"South\\nWest\")) +\n    karl_theme)\n\n### smoking status\nsmoker &lt;- ggplotly(\n  ggplot(data = medicalcost, aes(x = smoker)) +\n    geom_bar(fill=\"navy\", alpha = 0.7, color = \"black\") +\n    labs(x=\"Smoker\", y=\"Count\", \n         title=\"Smoker\") +\n    karl_theme)\n\n\ncategories &lt;- subplot(\n  children, sex, region, smoker, nrows = 2,\n  shareX = FALSE, shareY = FALSE, titleX = TRUE, titleY = TRUE, margin = 0.1\n)\ncategories &lt;- layout(categories, \n                       title = list(\n                         text = \"Sex, Smoking Status, Number of Children, and Region\",\n                         font = list(size = 25, family= \"serif\", face = \"bold\", weight = \"bold\")))\ncategories"
  },
  {
    "objectID": "Blog/Medical-Cost/MedicalCost.html#continuous-vs-categorical-variables",
    "href": "Blog/Medical-Cost/MedicalCost.html#continuous-vs-categorical-variables",
    "title": "MedicalCostPrediction",
    "section": "Continuous vs Categorical Variables",
    "text": "Continuous vs Categorical Variables\n\nAge distribution\n\nage.sex.comparison &lt;- list(c(\"male\", \"female\")) \nage.sex.plot &lt;- ggplotly(ggplot(data = medicalcost, aes(x = reorder(sex, -age, FUN = median), y=age)) +\n                           geom_violin(aes(fill = sex), alpha = 0.5, color = \"black\") +\n                           geom_boxplot(aes(fill = sex), alpha = 0.75, color = \"black\") +\n                           geom_sina(aes(fill = sex), alpha = 0.5, size = 3, color = \"white\") +\n                           labs(x=\"Sex\", y=\"Age\", title = \"Age Distribution by Sex\") +\n                           scale_fill_manual(values = c(\"#1D24CA\", \"#B31312\")) +\n                           scale_color_manual(values = c(\"#1D24CA\", \"#B31312\")) +\n                           #stat_summary(fun.data = mean_cl_boot, geom = \"point\", color = \"black\", size = 3) +\n                           stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color = \"black\", size = 1, width = 0.1) +\n                           stat_compare_means(comparisons = age.sex.comparison, method = \"t.test\") +\n                           stat_compare_means(method = \"t.test\", label.y = 65, label.x = 1.5) +\n                           karl_theme +\n                           theme(legend.position = \"none\"))\n\n\nage.smoker.comparison &lt;- list(c(\"no\", \"yes\"))\nage.smoker.plot &lt;- ggplotly(ggplot(data = medicalcost, aes(x = reorder(smoker, -age, FUN = median), y=age)) +\n                              geom_violin(aes(fill = smoker), alpha = 0.5, color = \"black\") +\n                              geom_boxplot(aes(fill = smoker), alpha = 0.75, color = \"black\") +\n                              geom_sina(aes(fill = smoker), alpha = 0.5, size = 3, color = \"white\") +\n                              labs(x=\"Smoker\", y=\"Age\", title = \"Age Distribution by Smoking Status\") +\n                              scale_fill_manual(values = c(\"#1D24CA\", \"#B31312\")) +\n                              scale_color_manual(values = c(\"#1D24CA\", \"#B31312\")) +\n                              stat_summary(fun.data = mean_cl_boot, geom = \"point\", color = \"black\", size = 3) +\n                              stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color = \"black\", size = 1, width = 0.1) +\n                              #stat_compare_means(comparisons = age.smoker.comparison, method = \"t.test\") +\n                              stat_compare_means(method = \"t.test\", label.y = 62.5, label.x = 1.5) +\n                              karl_theme +\n                              theme(legend.position = \"none\"))\n\nage.region.comparison &lt;- list(c(\"northeast\", \"northwest\"), c(\"northeast\", \"southeast\"), c(\"northeast\", \"southwest\"),\n                              c(\"northwest\", \"southeast\"), c(\"northwest\", \"southwest\"),\n                              c(\"southeast\", \"southwest\"))\nage.region.plot &lt;- ggplotly(ggplot(data = medicalcost, aes(x = reorder(region, -age, FUN = median), y=age)) +\n                              geom_violin(aes(fill = region), alpha = 0.5, color = \"black\") +\n                              geom_boxplot(aes(fill = region), alpha = 0.75, color = \"black\") +\n                              geom_sina(aes(fill = region), alpha = 0.5, size = 3, color = \"white\") +\n                              labs(x=\"Region\", y=\"Age\", title = \"Age Distribution by Region\") +\n                              scale_fill_manual(values = c(\"#1D24CA\", \"#B31312\", \"#F7C04A\", \"#539165\")) +\n                              scale_color_manual(values = c(\"#1D24CA\", \"#B31312\", \"#F7C04A\", \"#539165\")) +\n                              stat_summary(fun.data = mean_cl_boot, geom = \"point\", color = \"black\", size = 3) +\n                              stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color = \"black\", size = 1, width = 0.1) +\n                              #stat_compare_means(comparisons = age.region.comparison, method = \"t.test\") +\n                              stat_compare_means(method = \"anova\", label.y = 60, label.x = 2) +\n                              karl_theme +\n                              theme(legend.position = \"none\"))\n\n\nage.children.comparison &lt;- list(c(\"0\", \"1\"), c(\"0\", \"2\"), c(\"0\", \"3\"), c(\"0\", \"4\"), c(\"0\", \"5\"),\n                                c(\"1\", \"2\"), c(\"1\", \"3\"), c(\"1\", \"4\"), c(\"1\", \"5\"),\n                                c(\"2\", \"3\"), c(\"2\", \"4\"), c(\"2\", \"5\"),\n                                c(\"3\", \"4\"), c(\"3\", \"5\"), c(\"4\", \"5\"))\nage.children.plot &lt;- ggplotly(ggplot(data = medicalcost, aes(x = reorder(children, -age, FUN = median), y=age)) +\n                                geom_violin(aes(fill = children), alpha = 0.5, color = \"black\") +\n                                geom_boxplot(aes(fill = children), alpha = 0.75, color = \"black\") +\n                                geom_sina(aes(fill = children), alpha = 0.5, size = 3, color = \"white\") +\n                                labs(x=\"Children\", y=\"Age\", title = \"Age Distribution by Number of Children\") +\n                                scale_fill_manual(values = c(\"#1D24CA\", \"#005EF9\", \"#0083FF\", \"#00A0F6\", \"#00B9D0\", \"#00D0A2\")) +\n                                scale_color_manual(values = c(\"#1D24CA\", \"#005EF9\", \"#0083FF\", \"#00A0F6\", \"#00B9D0\", \"#00D0A2\")) +\n                                stat_summary(fun.data = mean_cl_boot, geom = \"point\", color = \"black\", size = 3) +\n                                stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color = \"black\", size = 1, width = 0.1) +\n                                #stat_compare_means(comparisons = age.children.comparison, method = \"t.test\") +\n                                stat_compare_means(method = \"anova\", label.y = 65, label.x = 2) +\n                                karl_theme +\n                                theme(legend.position = \"none\"))\n\nage.categories &lt;- subplot(\n  age.sex.plot, age.smoker.plot, age.region.plot, age.children.plot, nrows = 2,\n  shareX = FALSE, shareY = FALSE, titleX = TRUE, titleY = TRUE, margin = 0.1\n)\nage.categories &lt;- layout(age.categories, \n                     title = list(\n                       text = \"Age Distribution among Categories\",\n                       font = list(size = 25, family= \"serif\", face = \"bold\", weight = \"bold\")))\nage.categories\n\n\n\n\n\n\n\nBMI distribution\n\nbmi.sex.comparison &lt;- list(c(\"male\", \"female\")) \nbmi.sex.plot &lt;- ggplotly(ggplot(data = medicalcost, aes(x = reorder(sex, -bmi, FUN = median), y=bmi)) +\n                           geom_violin(aes(fill = sex), alpha = 0.5, color = \"black\") +\n                           geom_boxplot(aes(fill = sex), alpha = 0.75, color = \"black\") +\n                           geom_sina(aes(fill = sex), alpha = 0.5, size = 3, color = \"white\") +\n                           labs(x=\"Sex\", y=\"BMI\", title = \"BMI Distribution by Sex\") +\n                           scale_fill_manual(values = c(\"#1D24CA\", \"#B31312\")) +\n                           scale_color_manual(values = c(\"#1D24CA\", \"#B31312\")) +\n                           stat_summary(fun.data = mean_cl_boot, geom = \"point\", color = \"black\", size = 3) +\n                           stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color = \"black\", size = 1, width = 0.1) +\n                           #stat_compare_means(comparisons = age.sex.comparison, method = \"t.test\") +\n                           stat_compare_means(method = \"t.test\", label.y = 50, label.x = 1.5) +\n                           karl_theme +\n                           theme(legend.position = \"none\"))\n\nbmi.smoker.comparison &lt;- list(c(\"no\", \"yes\"))\nbmi.smoker.plot &lt;- ggplotly(ggplot(data = medicalcost, aes(x = reorder(smoker, -bmi, FUN = median), y=bmi)) +\n                              geom_violin(aes(fill = smoker), alpha = 0.5, color = \"black\") +\n                              geom_boxplot(aes(fill = smoker), alpha = 0.75, color = \"black\") +\n                              geom_sina(aes(fill = smoker), alpha = 0.5, size = 3, color = \"white\") +\n                              labs(x=\"Smoker\", y=\"BMI\", title = \"BMI Distribution by Smoking Status\") +\n                              scale_fill_manual(values = c(\"#1D24CA\", \"#B31312\")) +\n                              scale_color_manual(values = c(\"#1D24CA\", \"#B31312\")) +\n                              stat_summary(fun.data = mean_cl_boot, geom = \"point\", color = \"black\", size = 3) +\n                              stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color = \"black\", size = 1, width = 0.1) +\n                              #stat_compare_means(comparisons = age.smoker.comparison, method = \"t.test\") +\n                              stat_compare_means(method = \"t.test\", label.y = 50, label.x = 1.5) +\n                              karl_theme +\n                              theme(legend.position = \"none\"))\n\nbmi.region.comparison &lt;- list(c(\"northeast\", \"northwest\"), c(\"northeast\", \"southeast\"), c(\"northeast\", \"southwest\"),\n                              c(\"northwest\", \"southeast\"), c(\"northwest\", \"southwest\"),\n                              c(\"southeast\", \"southwest\"))\nbmi.region.plot &lt;- ggplotly(ggplot(data = medicalcost, aes(x = reorder(region, -bmi, FUN = median), y=bmi)) +\n                              geom_violin(aes(fill = region), alpha = 0.5, color = \"black\") +\n                              geom_boxplot(aes(fill = region), alpha = 0.75, color = \"black\") +\n                              geom_sina(aes(fill = region), alpha = 0.5, size = 3, color = \"white\") +\n                              labs(x=\"Region\", y=\"BMI\", title = \"BMI Distribution by Region\") +\n                              scale_fill_manual(values = c(\"#1D24CA\", \"#B31312\", \"#F7C04A\", \"#539165\")) +\n                              scale_color_manual(values = c(\"#1D24CA\", \"#B31312\", \"#F7C04A\", \"#539165\")) +\n                              stat_summary(fun.data = mean_cl_boot, geom = \"point\", color = \"black\", size = 3) +\n                              stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color = \"black\", size = 1, width = 0.1) +\n                              #stat_compare_means(comparisons = age.region.comparison, method = \"t.test\") +\n                              stat_compare_means(method = \"anova\", label.y = 50, label.x = 2) +\n                              karl_theme +\n                              theme(legend.position = \"none\"))\n\nbmi.children.comparison &lt;- list(c(\"0\", \"1\"), c(\"0\", \"2\"), c(\"0\", \"3\"), c(\"0\", \"4\"), c(\"0\", \"5\"),\n                                c(\"1\", \"2\"), c(\"1\", \"3\"), c(\"1\", \"4\"), c(\"1\", \"5\"),\n                                c(\"2\", \"3\"), c(\"2\", \"4\"), c(\"2\", \"5\"),\n                                c(\"3\", \"4\"), c(\"3\", \"5\"), c(\"4\", \"5\"))\nbmi.children.plot &lt;- ggplotly(ggplot(data = medicalcost, aes(x = reorder(children, -bmi, FUN = median), y=bmi)) +\n                                geom_violin(aes(fill = children), alpha = 0.5, color = \"black\") +\n                                geom_boxplot(aes(fill = children), alpha = 0.75, color = \"black\") +\n                                geom_sina(aes(fill = children), alpha = 0.5, size = 3, color = \"white\") +\n                                labs(x=\"Children\", y=\"BMI\", title = \"BMI Distribution by Number of Children\") +\n                                scale_fill_manual(values = c(\"#1D24CA\", \"#005EF9\", \"#0083FF\", \"#00A0F6\", \"#00B9D0\", \"#00D0A2\")) +\n                                scale_color_manual(values = c(\"#1D24CA\", \"#005EF9\", \"#0083FF\", \"#00A0F6\", \"#00B9D0\", \"#00D0A2\")) +\n                                stat_summary(fun.data = mean_cl_boot, geom = \"point\", color = \"black\", size = 3) +\n                                stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color = \"black\", size = 1, width = 0.1) +\n                                #stat_compare_means(comparisons = age.children.comparison, method = \"t.test\") +\n                                stat_compare_means(method = \"anova\", label.y = 50, label.x = 3) +\n                                karl_theme +\n                                theme(legend.position = \"none\"))\n\nbmi.categories &lt;- subplot(\n  bmi.sex.plot, bmi.smoker.plot, bmi.region.plot, bmi.children.plot, nrows = 2,\n  shareX = FALSE, shareY = FALSE, titleX = TRUE, titleY = TRUE, margin = 0.1\n)\nbmi.categories &lt;- layout(bmi.categories,\n                         title = list(\n                           text = \"BMI Distribution among Categories\",\n                           font = list(size = 25, family= \"serif\", face = \"bold\", weight = \"bold\")))\nbmi.categories\n\n\n\n\n\n\n\nMedical Cost distribution\n\ncharges.sex.comparison &lt;- list(c(\"male\", \"female\")) \ncharges.sex.plot &lt;- ggplotly(ggplot(data = medicalcost, aes(x = reorder(sex, -charges, FUN = median), y=charges)) +\n                           geom_violin(aes(fill = sex), alpha = 0.5, color = \"black\") +\n                           geom_boxplot(aes(fill = sex), alpha = 0.75, color = \"black\") +\n                           geom_sina(aes(fill = sex), alpha = 0.5, size = 3, color = \"white\") +\n                           labs(x=\"Sex\", y=\"Charges ($)\", title = \"Charges Distribution by Sex\") +\n                           scale_fill_manual(values = c(\"#1D24CA\", \"#B31312\")) +\n                           scale_color_manual(values = c(\"#1D24CA\", \"#B31312\")) +\n                           stat_summary(fun.data = mean_cl_boot, geom = \"point\", color = \"black\", size = 3) +\n                           stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color = \"black\", size = 1, width = 0.1) +\n                           #stat_compare_means(comparisons = age.sex.comparison, method = \"t.test\") +\n                           stat_compare_means(method = \"t.test\", label.y = 60000, label.x = 1.5) +\n                           karl_theme +\n                           theme(legend.position = \"none\") +\n                             scale_y_continuous(breaks = c(20000, 40000, 60000),\n                                                labels = c(\"$20k\", \"$40k\", \"$60k\")))\n\ncharges.smoker.comparison &lt;- list(c(\"no\", \"yes\"))\ncharges.smoker.plot &lt;- ggplotly(ggplot(data = medicalcost, aes(x = reorder(smoker, -charges, FUN = median), y=charges)) +\n                              geom_violin(aes(fill = smoker), alpha = 0.5, color = \"black\") +\n                              geom_boxplot(aes(fill = smoker), alpha = 0.75, color = \"black\") +\n                              geom_sina(aes(fill = smoker), alpha = 0.5, size = 3, color = \"white\") +\n                              labs(x=\"Smoker\", y=\"Charges ($)\", title = \"Charges Distribution by Smoking Status\") +\n                              scale_fill_manual(values = c(\"#1D24CA\", \"#B31312\")) +\n                              scale_color_manual(values = c(\"#1D24CA\", \"#B31312\")) +\n                              stat_summary(fun.data = mean_cl_boot, geom = \"point\", color = \"black\", size = 3) +\n                              stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color = \"black\", size = 1, width = 0.1) +\n                              #stat_compare_means(comparisons = age.smoker.comparison, method = \"t.test\") +\n                              stat_compare_means(method = \"t.test\", label.y = 60000, label.x = 1.5) +\n                              karl_theme +\n                              theme(legend.position = \"none\") +\n                                scale_y_continuous(breaks = c(20000, 40000, 60000),\n                                                   labels = c(\"$20k\", \"$40k\", \"$60k\")))\n\ncharges.region.comparison &lt;- list(c(\"northeast\", \"northwest\"), c(\"northeast\", \"southeast\"), c(\"northeast\", \"southwest\"),\n                              c(\"northwest\", \"southeast\"), c(\"northwest\", \"southwest\"),\n                              c(\"southeast\", \"southwest\"))\ncharges.region.plot &lt;- ggplotly(ggplot(data = medicalcost, aes(x = reorder(region, -charges, FUN = median), y=charges)) +\n                              geom_violin(aes(fill = region), alpha = 0.5, color = \"black\") +\n                              geom_boxplot(aes(fill = region), alpha = 0.75, color = \"black\") +\n                              geom_sina(aes(fill = region), alpha = 0.5, size = 3, color = \"white\") +\n                              labs(x=\"Region\", y=\"Charges ($)\", title = \"Charges Distribution by Region\") +\n                              scale_fill_manual(values = c(\"#1D24CA\", \"#B31312\", \"#F7C04A\", \"#539165\")) +\n                              scale_color_manual(values = c(\"#1D24CA\", \"#B31312\", \"#F7C04A\", \"#539165\")) +\n                              stat_summary(fun.data = mean_cl_boot, geom = \"point\", color = \"black\", size = 3) +\n                              stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color = \"black\", size = 1, width = 0.1) +\n                              #stat_compare_means(comparisons = age.region.comparison, method = \"t.test\") +\n                              stat_compare_means(method = \"anova\", label.y = 60000, label.x = 2.5) +\n                              karl_theme +\n                              theme(legend.position = \"none\") +\n                                scale_y_continuous(breaks = c(20000, 40000, 60000),\n                                                   labels = c(\"$20k\", \"$40k\", \"$60k\")))\n\ncharges.children.comparison &lt;- list(c(\"0\", \"1\"), c(\"0\", \"2\"), c(\"0\", \"3\"), c(\"0\", \"4\"), c(\"0\", \"5\"),\n                                c(\"1\", \"2\"), c(\"1\", \"3\"), c(\"1\", \"4\"), c(\"1\", \"5\"),\n                                c(\"2\", \"3\"), c(\"2\", \"4\"), c(\"2\", \"5\"),\n                                c(\"3\", \"4\"), c(\"3\", \"5\"), c(\"4\", \"5\"))\ncharges.children.plot &lt;- ggplotly(ggplot(data = medicalcost, aes(x = reorder(children, -charges, FUN = median), y=charges)) +\n                                geom_violin(aes(fill = children), alpha = 0.5, color = \"black\") +\n                                geom_boxplot(aes(fill = children), alpha = 0.75, color = \"black\") +\n                                geom_sina(aes(fill = children), alpha = 0.5, size = 3, color = \"white\") +\n                                labs(x=\"Children\", y=\"Charges ($)\", title = \"Charges Distribution by Number of Children\") +\n                                scale_fill_manual(values = c(\"#1D24CA\", \"#005EF9\", \"#0083FF\", \"#00A0F6\", \"#00B9D0\", \"#00D0A2\")) +\n                                scale_color_manual(values = c(\"#1D24CA\", \"#005EF9\", \"#0083FF\", \"#00A0F6\", \"#00B9D0\", \"#00D0A2\")) +\n                                stat_summary(fun.data = mean_cl_boot, geom = \"point\", color = \"black\", size = 3) +\n                                stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color = \"black\", size = 1, width = 0.1) +\n                                #stat_compare_means(comparisons = age.children.comparison, method = \"t.test\") +\n                                stat_compare_means(method = \"anova\", label.y = 60000, label.x = 2.5) +\n                                karl_theme +\n                                theme(legend.position = \"none\") +\n                                  scale_y_continuous(breaks = c(20000, 40000, 60000),\n                                                     labels = c(\"$20k\", \"$40k\", \"$60k\")))\ncharges.categories &lt;- subplot(\n  charges.sex.plot, charges.smoker.plot, charges.region.plot, charges.children.plot, nrows = 2,\n  shareX = FALSE, shareY = FALSE, titleX = TRUE, titleY = TRUE, margin = 0.1\n)\ncharges.categories &lt;- layout(charges.categories,\n                         title = list(\n                           text = \"Charges ($) Distribution among Categories\",\n                           font = list(size = 25, family= \"serif\", face = \"bold\", weight = \"bold\")))\ncharges.categories\n\n\n\n\n\n\n\nAge and Medical Charge\n\nage.BMIstatus.comparison &lt;- list(c(\"Underweight\", \"Normal\"),\n                                 c(\"Underweight\", \"Overweight\"),\n                                 c(\"Underweight\", \"Obese\"),\n                                 c(\"Normal\", \"Overweight\"),\n                                 c(\"Normal\", \"Obese\"),\n                                 c(\"Overweight\", \"Obese\"))\nage.bmi.status &lt;- age.BMIstatus.plot &lt;- ggplotly(ggplot(data = BMIstatus, aes(x = reorder(BMI.status, -age, FUN = median), y=age)) +\n                                 geom_violin(aes(fill = BMI.status), alpha = 0.5, color = \"black\") +\n                                 geom_boxplot(aes(fill = BMI.status), alpha = 0.75, color = \"black\") +\n                                 geom_sina(aes(fill = BMI.status), alpha = 0.5, size = 3, color = \"white\") +\n                                 labs(x=\"BMI status\", y=\"Age\", title = \"Age Distribution by BMI status\") +\n                                 scale_fill_manual(values = c(\"#1D24CA\", \"#539165\", \"#F7C04A\",\"#B31312\")) +\n                                 scale_color_manual(values = c(\"#1D24CA\", \"#539165\", \"#F7C04A\",\"#B31312\")) +\n                                 stat_summary(fun.data = mean_cl_boot, geom = \"point\", color = \"black\", size = 3) +\n                                 stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color = \"black\", size = 1, width = 0.1) +\n                                 #stat_compare_means(comparisons = age.BMIstatus.comparison) +\n                                 stat_compare_means(method = \"anova\", label.y = 62, label.x = 2) +\n                                 karl_theme +\n                                 theme(legend.position = \"none\"))\n\ncharge.bmistatus &lt;- charges.BMIstatus.plot &lt;- ggplotly(ggplot(data = BMIstatus, aes(x = reorder(BMI.status, -charges, FUN = median), y=charges)) +\n                                 geom_violin(aes(fill = BMI.status), alpha = 0.5, color = \"black\") +\n                                 geom_boxplot(aes(fill = BMI.status), alpha = 0.75, color = \"black\") +\n                                 geom_sina(aes(fill = BMI.status), alpha = 0.5, size = 3, color = \"white\") +\n                                 labs(x=\"BMI status\", y=\"Charges ($)\", title = \"Charge Distribution by BMI status\") +\n                                 scale_fill_manual(values = c(\"#1D24CA\", \"#539165\", \"#F7C04A\",\"#B31312\")) +\n                                 scale_color_manual(values = c(\"#1D24CA\", \"#539165\", \"#F7C04A\",\"#B31312\")) +\n                                 stat_summary(fun.data = mean_cl_boot, geom = \"point\", color = \"black\", size = 3) +\n                                 stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color = \"black\", size = 1, width = 0.1) +\n                                 #stat_compare_means(comparisons = age.BMIstatus.comparison) +\n                                 stat_compare_means(method = \"anova\", label.y = 60000, label.x = 1.5) +\n                                 karl_theme +\n                                 theme(legend.position = \"none\") +\n                                   scale_y_continuous(breaks = c(20000, 40000, 60000),\n                                                      labels = c(\"$20k\", \"$40k\", \"$60k\")))\nBMIstatus &lt;- subplot(\n  age.bmi.status, charge.bmistatus, nrows = 1,\n  shareX = FALSE, shareY = FALSE, titleX = TRUE, titleY = TRUE, margin = 0.075\n)\nBMIstatus &lt;- layout(BMIstatus,\n                         title = list(\n                           text = \"Age and Medical Charges among different BMI classification\",\n                           font = list(size = 25, family= \"serif\", face = \"bold\", weight = \"bold\")))\nBMIstatus"
  },
  {
    "objectID": "Blog/Medical-Cost/MedicalCost.html#continuous-vs-continuous-variables",
    "href": "Blog/Medical-Cost/MedicalCost.html#continuous-vs-continuous-variables",
    "title": "MedicalCostPrediction",
    "section": "Continuous vs Continuous Variables",
    "text": "Continuous vs Continuous Variables\n\nMedical Cost vs Age by smoking status\n\nage.vs.charge.by.smoker &lt;- ggplotly(ggplot(data = medicalcost, aes(x = age, y = charges)) +\n                                      geom_point(alpha = 0.7, size = 5, color = \"white\", aes(fill = smoker)) +\n                                      labs(title = \"Smoker among the highest charged medically\",\n                                           x = \"Age\", y = \"Medical Cost\") +\n                                      scale_fill_manual(values = c(\"no\" = \"#1D24CA\",\"yes\" = \"#B31312\")) +\n                                      scale_y_continuous(breaks = c(20000, 40000, 60000),\n                                                         labels = c(\"$20k\", \"$40k\", \"$60k\")) +\n                                      karl_theme +\n                                      theme(legend.position.inside = c(0, 0)))\nage.vs.charge.by.smoker\n\n\n\n\n\n\n\nMedical Cost vs Age by BMI status\n\nBMIstatus &lt;- medicalcost %&gt;% \n  filter(BMI.status != \"Unknown\")\nggplotly(ggplot(data = BMIstatus, aes(x = age, y = charges)) +\n           geom_point(alpha = 0.75, size = 3, color = \"white\", aes(fill = BMI.status)) +\n           labs(title = \"Obese among the highest charged medically\") +\n           scale_fill_manual(values = c(\"Underweight\" = \"#1D24CA\", \n                                         \"Normal\" = \"#539165\", \n                                         \"Overweight\" = \"#F7C04A\",\n                                         \"Obese\" = \"#B31312\")) +\n           scale_y_continuous(breaks = c(20000, 40000, 60000),\n                                    labels = c(\"$20k\", \"$40k\", \"$60k\")) +\n           facet_wrap(~ BMI.status) +\n           karl_theme)\n\n\n\n\n\n\n\nMedical Cost vs BMI by smoking status\n\nbmi.vs.charge.by.smoker &lt;- ggplotly(ggplot(data = medicalcost, aes(x = bmi, y = charges)) +\n                            geom_point(alpha = 0.75, size = 5, color = \"white\", aes(fill = smoker)) +\n                            labs(title = \"Smoker among the highest medically charged\",\n                                 x = \"BMI\", y = \"Charges ($)\") +\n                            scale_fill_manual(values = c(\"no\" = \"#1D24CA\",\"yes\" = \"#B31312\")) +\n                            scale_y_continuous(breaks = c(20000, 40000, 60000),\n                                               labels = c(\"$20k\", \"$40k\", \"$60k\")) +\n                            karl_theme)\nbmi.vs.charge.by.smoker"
  },
  {
    "objectID": "Blog/Medical-Cost/MedicalCost.html#d-plots",
    "href": "Blog/Medical-Cost/MedicalCost.html#d-plots",
    "title": "MedicalCostPrediction",
    "section": "3D Plots",
    "text": "3D Plots\n\nBMIstatus.naremoved &lt;- medicalcost %&gt;% \n  filter(BMI.status != \"Unknown\") %&gt;% \n  mutate(BMI.status = factor(BMI.status,\n                                levels = c(\"Underweight\", \"Normal\",\n                                           \"Overweight\", \"Obese\")))\n\nage.bmi.charge2 &lt;- plot_ly(\n  data = BMIstatus.naremoved, type = \"scatter3d\", mode = \"markers\",\n  x = ~age, y = ~bmi, z = ~charges, \n  color = ~smoker, colors = c(\"no\" = \"#1D24CA\", \"yes\" = \"#B31312\"),\n  symbol = ~BMI.status, symbols = c(\"Underweight\" = \"circle\",\n                                    \"Normal\" = \"square\",\n                                    \"Overweight\" = \"diamond\",\n                                    \"Obese\" = \"cross\"),\n  marker = list(opacity = 0.5), width = 900, height = 800) %&gt;% \n  layout(\n    title = list(\n      text = \"3D ScatterPlot of Age, BMI, and Charges\", \n      font = list(size = 20)),\n    scene = list(\n      xaxis = list(title = \"Age\", titlefont = list(size = 10)),\n      yaxis = list(title = \"BMI\", titlefont = list(size = 10)),\n      zaxis = list(title = \"Charges ($)\", titlefont = list(size = 10))),\n    legend = list(title = list(text = \"Smoker Status\", font = list(size = 10))),\n    margin = list(l = 10, r = 10, b = 10, t = 40), \n    autosize = TRUE)\nage.bmi.charge2\n\n\n\nDouble-positive for Smoker and Obese among the highest medically charged."
  }
]